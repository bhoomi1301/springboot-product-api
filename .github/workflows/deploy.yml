name: CI/CD Pipeline for Spring Boot Product API

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy-test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🛠️ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            bhoomi1311/springboot-product-api:latest
            bhoomi1311/springboot-product-api:${{ github.sha }}

      - name: ⚙️ Set up kubeconfig from secret
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > ~/.kube/config

      - name: ⚡ Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      - name: 🚀 Deploy to Kubernetes (v1)
        run: |
          kubectl apply -f k8s-manifests/namespace-v1.yaml
          kubectl apply -f k8s-manifests/deployment-v1.yaml
          kubectl apply -f k8s-manifests/service-v1.yaml
          kubectl apply -f k8s-manifests/hpa-v1.yaml

      - name: 🚀 Deploy to Kubernetes (v1.1)
        run: |
          kubectl apply -f k8s-manifests/namespace-v1-1.yaml
          kubectl apply -f k8s-manifests/deployment-v1-1.yaml
          kubectl apply -f k8s-manifests/service-v1-1.yaml
          kubectl apply -f k8s-manifests/hpa-v1-1.yaml

      - name: 🚀 Deploy to Kubernetes (v2)
        run: |
          kubectl apply -f k8s-manifests/namespace-v2.yaml
          kubectl apply -f k8s-manifests/deployment-v2.yaml
          kubectl apply -f k8s-manifests/service-v2.yaml
          kubectl apply -f k8s-manifests/hpa-v2.yaml

      - name: 🌐 Apply Ingress
        run: |
          kubectl apply -f k8s-manifests/ingress.yaml

      - name: 🔌 Port Forward Ingress
        run: |
          nohup kubectl port-forward -n ingress-nginx service/ingress-nginx-controller 8888:80 > port-forward.log 2>&1 &
          sleep 10

      - name: 🧪 Run Integration Test
        run: |
          echo "Running integration test against /v1/health..."
          curl --fail http://localhost:8888/v1/health
